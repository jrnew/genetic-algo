% Generated by roxygen2 (4.0.2): do not edit by hand
\name{select_model}
\alias{select_model}
\title{Carry out model selection with a genetic algorithm.}
\usage{
select_model(data, yvar, xvars = NULL, model = "lm", criterion = "AIC",
  pop_size = 100L, method_select = "rank", method_recombine = "onepoint",
  prob_recombine = 0.6, prob_mutate = 0.01, num_max_iterations = 100L,
  seed = 123, do_parallel = FALSE)
}
\arguments{
\item{data}{Data frame}

\item{yvar}{Character; Name of column containing response variable}

\item{xvars}{Character vector; Default is all column names that are not yvar;
Name(s) of column(s) containing set of explanatory variables to select on.}

\item{model}{Character; "lm" (default) or "glm"; Linear model or
generalized linear model.}

\item{criterion}{"AIC" (default) or "BIC"; Criterion to be minimized.}

\item{pop_size}{Integer; Default is 100; Number of chromosomes per generation.}

\item{method_select}{String; "rank" (linear rank selection) (default) or
"tournament"; Method to select chromosomes for inclusion in mating pool.}

\item{method_recombine}{String; "onepoint" (default), "twopoint", "uniform";
Type of crossover, at one point, at two points or uniformly (at all possible points).}

\item{prob_recombine}{Numeric, between 0 and 1; Default is 0.6;
Probability of recombination.}

\item{prob_mutate}{Numeric, between 0 and 1; Default is 0.01;
Probability of mutation.}

\item{num_max_iterations}{Non-negative integer; Default is 100;
Maximum number of iterations before algorithm is stopped.}

\item{seed}{Non-negative integer; Default is 123; Random seed
for reproducibility.}

\item{do_parallel}{Logical; Default is FALSE; Do in parallel?}

\item{glm_family}{Character if model is "glm", NULL otherwise;
"binomial", "gaussian" (default), "Gamma", "inverse.gaussian", "poisson", "quasi",
"quasibinomial", "quasipoisson"; A family function that gives the error
distribution and link function to be used in the model.}
}
\description{
Main function for carrying out model selection with a genetic algorithm.
}

